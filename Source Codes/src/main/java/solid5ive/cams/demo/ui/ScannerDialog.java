/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package solid5ive.cams.demo.ui;

import com.google.zxing.BinaryBitmap;
import com.google.zxing.LuminanceSource;
import com.google.zxing.MultiFormatReader;
import com.google.zxing.ReaderException;
import com.google.zxing.Result;
import com.google.zxing.client.j2se.BufferedImageLuminanceSource;
import com.google.zxing.common.HybridBinarizer;
import java.awt.BorderLayout;
import java.awt.image.BufferedImage;
import java.io.IOException;
import javax.swing.JLabel;
import org.openimaj.image.DisplayUtilities;
import org.openimaj.image.ImageUtilities;
import org.openimaj.image.MBFImage;
import org.openimaj.video.VideoDisplay;
import org.openimaj.video.VideoDisplayListener;
import org.openimaj.video.capture.VideoCapture;

/**
 *
 * @author Bernard
 */
public class ScannerDialog extends javax.swing.JDialog {

    private VideoCapture videoCapture;
    private VideoDisplay videoDisplay;
    private DisplayUtilities.ImageComponent imageComponent;
    private String barcode;
    private boolean accepted;
    
    /**
     * Creates new form ScannerDialog
     */
    public ScannerDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        UiToolKits.centerToScreen(this);
    }

    public String getDecodedText(BufferedImage image) throws IOException {
        if(image == null) return "";
        LuminanceSource source = new BufferedImageLuminanceSource(image);
        BinaryBitmap bitmap = new BinaryBitmap(new HybridBinarizer(source));
        Result result;

        try {
            result = new MultiFormatReader().decode(bitmap);
            String text = result.getText();
            if(text != null && !text.isEmpty()) System.out.println(text);
            return text;
        } catch (ReaderException re) {
            //System.out.println(re.toString());
            return "";
        }
    }

    public String getBarcode() {
        return barcode;
    }

    public boolean isAccepted() {
        return accepted;
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        webLabel1 = new com.alee.laf.label.WebLabel();
        videoPanel = new javax.swing.JPanel();
        manualField = new com.alee.laf.text.WebTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentHidden(java.awt.event.ComponentEvent evt) {
                formComponentHidden(evt);
            }
        });

        webLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        webLabel1.setText("Please scan your card");
        webLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        webLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        videoPanel.setBackground(new java.awt.Color(0, 0, 0));

        javax.swing.GroupLayout videoPanelLayout = new javax.swing.GroupLayout(videoPanel);
        videoPanel.setLayout(videoPanelLayout);
        videoPanelLayout.setHorizontalGroup(
            videoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        videoPanelLayout.setVerticalGroup(
            videoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 263, Short.MAX_VALUE)
        );

        manualField.setInputPrompt("or manually key in your identity here");
        manualField.setInputPromptFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        manualField.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentHidden(java.awt.event.ComponentEvent evt) {
                manualFieldComponentHidden(evt);
            }
            public void componentShown(java.awt.event.ComponentEvent evt) {
                manualFieldComponentShown(evt);
            }
        });
        manualField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                manualFieldActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(manualField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(videoPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(webLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 396, Short.MAX_VALUE))
                .addGap(30, 30, 30))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(webLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(videoPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(manualField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(20, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void manualFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_manualFieldActionPerformed
        accepted = true;
        barcode = manualField.getText();
        setVisible(false);
    }//GEN-LAST:event_manualFieldActionPerformed

    private void manualFieldComponentHidden(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_manualFieldComponentHidden
        if(videoDisplay != null) {
            videoCapture.stopCapture();
            videoDisplay.close();
        }
    }//GEN-LAST:event_manualFieldComponentHidden

    private void manualFieldComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_manualFieldComponentShown
        
    }//GEN-LAST:event_manualFieldComponentShown

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        try {
            videoCapture = new VideoCapture(640, 320);
            videoDisplay = VideoDisplay.createVideoDisplay(videoCapture, videoPanel);
            videoDisplay.addVideoListener(new VideoDisplayListener<MBFImage>() {
            @Override
            public void afterUpdate(VideoDisplay<MBFImage> mbfImageVideoDisplay) {
                //To change body of implemented methods use File | Settings | File Templates.
            }
            
            @Override
            public void beforeUpdate(MBFImage fImages) {
                try {
                    barcode = getDecodedText(ImageUtilities.createBufferedImageForDisplay(fImages));
                    if(!barcode.isEmpty()) {
                        accepted = true;
                        setVisible(false);
                    }
                } catch (IOException e) {
                    e.printStackTrace();  //To change body of catch statement use File | Settings | File Templates.
                }
            }
            });
        } catch(Exception ex) {
            JLabel label = new JLabel("Camera not available.");
            label.setHorizontalAlignment(JLabel.CENTER);
            videoPanel.add(label, BorderLayout.CENTER);
        }
    }//GEN-LAST:event_formWindowOpened

    private void formComponentHidden(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentHidden
        videoCapture.stopCapture();
        videoDisplay.close();
    }//GEN-LAST:event_formComponentHidden

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        videoCapture.stopCapture();
        videoDisplay.close();
    }//GEN-LAST:event_formWindowClosing

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ScannerDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ScannerDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ScannerDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ScannerDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ScannerDialog dialog = new ScannerDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.alee.laf.text.WebTextField manualField;
    private javax.swing.JPanel videoPanel;
    private com.alee.laf.label.WebLabel webLabel1;
    // End of variables declaration//GEN-END:variables
}
