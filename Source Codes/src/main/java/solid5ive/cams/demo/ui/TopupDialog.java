/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package solid5ive.cams.demo.ui;

import com.alee.laf.optionpane.WebOptionPane;
import org.apache.shiro.session.UnknownSessionException;
import org.apache.shiro.subject.Subject;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;
import solid5ive.cams.data.entities.UserAccount;
import solid5ive.cams.service.contracts.UserService;

/**
 *
 * @author Bernard
 */
@Component
public class TopupDialog extends javax.swing.JFrame {

    private boolean isClosing;
    private Subject subject;
    @Autowired
    private UserService userService;

    /**
     * Creates new form TopupDialog
     */
    public TopupDialog() {
        super();
        initComponents();
        succeedLabel.setVisible(false);
    }

    public Subject getSubject() {
        return subject;
    }

    public void setSubject(Subject subject) {
        this.subject = subject;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        webLabel1 = new com.alee.laf.label.WebLabel();
        scanButton = new com.alee.laf.button.WebButton();
        webLabel3 = new com.alee.laf.label.WebLabel();
        cardIdField = new com.alee.laf.text.WebTextField();
        amountField = new com.alee.laf.text.WebTextField();
        webLabel4 = new com.alee.laf.label.WebLabel();
        webLabel5 = new com.alee.laf.label.WebLabel();
        balanceLabel = new com.alee.laf.label.WebLabel();
        succeedLabel = new com.alee.laf.label.WebLabel();
        topUpButton = new com.alee.laf.button.WebButton();

        webLabel1.setText("webLabel1");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Top-up");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        scanButton.setText("Scan");
        scanButton.setFocusable(false);
        scanButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                scanButtonActionPerformed(evt);
            }
        });

        webLabel3.setText("Card ID");

        cardIdField.setInputPrompt("prepaid card ID");
        cardIdField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cardIdFieldActionPerformed(evt);
            }
        });
        cardIdField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                cardIdFieldFocusLost(evt);
            }
        });
        cardIdField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                cardIdFieldKeyTyped(evt);
            }
        });

        amountField.setInputPrompt("amount to top-up");
        amountField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                amountFieldActionPerformed(evt);
            }
        });

        webLabel4.setText("Amount");

        webLabel5.setText("Balance:");
        webLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        balanceLabel.setText("--.--");
        balanceLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        succeedLabel.setForeground(new java.awt.Color(0, 204, 51));
        succeedLabel.setText("Succeed!");
        succeedLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        topUpButton.setText("Top-up");
        topUpButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                topUpButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(webLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(webLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(cardIdField, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                                .addComponent(scanButton, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(amountField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(succeedLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(webLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(balanceLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(topUpButton, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(20, 20, 20))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(scanButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(webLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cardIdField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(amountField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(webLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 121, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(succeedLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(webLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(balanceLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(topUpButton, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cardIdFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cardIdFieldActionPerformed
        if (cardIdField.getText().isEmpty() || isClosing) {
            return;
        }
        try {
            succeedLabel.setVisible(false);
            UserAccount account = userService.findUserAccount(cardIdField.getText());
            if (account != null) {
                balanceLabel.setText(account.getBalance().toString());
            }
        } catch (IllegalArgumentException ex) {
            //It's ok...do nothing
        } catch (UnknownSessionException ue) {
            UiToolKits.showErrorDialog(
                    this,
                    "Access Denied",
                    "You are not logged in or the session is expired.");
            System.exit(0);
        } catch (Exception ex) {
            UiToolKits.showExceptionDialog(this, "Unexpected exception", ex);
        }
    }//GEN-LAST:event_cardIdFieldActionPerformed

    private void amountFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_amountFieldActionPerformed
        if (amountField.getText().isEmpty()) {
            return;
        }
        try {
            Double amount = Double.parseDouble(amountField.getText());
            UserAccount account = userService.topUpUserAccount((String) subject.getPrincipal(), cardIdField.getText(), amount);
            balanceLabel.setText(account.getBalance().toString());
            succeedLabel.setVisible(true);
            amountField.clear();
        } catch (NumberFormatException ex) {
            UiToolKits.showErrorDialog(this, "Invalid input", "Please enter decimal for amount to top-up.");
        } catch (IllegalArgumentException ex) {
            UiToolKits.showExceptionDialog(this, "Invalid request", ex);
        } catch (UnknownSessionException ue) {
            UiToolKits.showErrorDialog(
                    this,
                    "Access Denied",
                    "You are not logged in or the session is expired.");
            System.exit(0);
        } catch (Exception ex) {
            UiToolKits.showExceptionDialog(this, "Unexpected exception", ex);
        }
    }//GEN-LAST:event_amountFieldActionPerformed

    private void cardIdFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cardIdFieldFocusLost
        cardIdFieldActionPerformed(null);
    }//GEN-LAST:event_cardIdFieldFocusLost

    private void cardIdFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cardIdFieldKeyTyped
        balanceLabel.setText("--.--");
        isClosing = false;
    }//GEN-LAST:event_cardIdFieldKeyTyped

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        isClosing = true;
    }//GEN-LAST:event_formWindowClosing

    private void scanButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_scanButtonActionPerformed
        ScannerDialog dialog = new ScannerDialog(this, true);
        dialog.setVisible(true);
        if (dialog.isAccepted()) {
            cardIdField.setText(dialog.getBarcode().trim());
            cardIdFieldActionPerformed(null);
            amountField.requestFocus();
        }
    }//GEN-LAST:event_scanButtonActionPerformed

    private void topUpButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_topUpButtonActionPerformed
        if (amountField.getText().isEmpty()) {
            return;
        }
        try {
            Double amount = Double.parseDouble(amountField.getText());
            int reply = WebOptionPane.showConfirmDialog ( this, "Are you sure to top-up " + amountField.getText() + " dollars?", "Confirmation", WebOptionPane.YES_NO_OPTION,
                        WebOptionPane.QUESTION_MESSAGE );
            if(reply != WebOptionPane.YES_OPTION) return;
            UserAccount account = userService.topUpUserAccount((String) subject.getPrincipal(), cardIdField.getText(), amount);
            balanceLabel.setText(account.getBalance().toString());
            succeedLabel.setVisible(true);
            amountField.clear();
            cardIdField.clear();
        } catch (IllegalArgumentException ex) {
            UiToolKits.showExceptionDialog(this, "Invalid request", ex);
        } catch (UnknownSessionException ue) {
            UiToolKits.showErrorDialog(
                    this,
                    "Access Denied",
                    "You are not logged in or the session is expired.");
            System.exit(0);
        } catch (Exception ex) {
            UiToolKits.showExceptionDialog(this, "Unexpected exception", ex);
        }
    }//GEN-LAST:event_topUpButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.alee.laf.text.WebTextField amountField;
    private com.alee.laf.label.WebLabel balanceLabel;
    private com.alee.laf.text.WebTextField cardIdField;
    private com.alee.laf.button.WebButton scanButton;
    private com.alee.laf.label.WebLabel succeedLabel;
    private com.alee.laf.button.WebButton topUpButton;
    private com.alee.laf.label.WebLabel webLabel1;
    private com.alee.laf.label.WebLabel webLabel3;
    private com.alee.laf.label.WebLabel webLabel4;
    private com.alee.laf.label.WebLabel webLabel5;
    // End of variables declaration//GEN-END:variables
}
