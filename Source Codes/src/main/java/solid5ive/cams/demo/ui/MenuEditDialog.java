/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package solid5ive.cams.demo.ui;

import com.alee.extended.panel.WebButtonGroup;
import com.alee.laf.WebLookAndFeel;
import com.alee.laf.button.WebToggleButton;
import com.alee.laf.optionpane.WebOptionPane;
import java.awt.BorderLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.JOptionPane;
import solid5ive.cams.data.entities.Menu;
import solid5ive.cams.data.entities.MenuReference;
import solid5ive.cams.data.entities.MenuTag;

/**
 *
 * @author Bernard
 */
public class MenuEditDialog extends javax.swing.JDialog implements ActionListener {
    private Menu menu;
    private boolean okPressed;
    private MenuTag selectedTag;
    
    WebToggleButton promotionToggle;
    WebToggleButton hotToggle;
    WebToggleButton newToggle;
    WebToggleButton specialToggle;
    WebToggleButton recommandedToggle;
    WebToggleButton noneToggle;
    
    /**
     * Creates new form MenuEditDialog
     */
    public MenuEditDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        
        promotionToggle = new WebToggleButton("Promotion");
        promotionToggle.setActionCommand("Promotion");
        promotionToggle.addActionListener(this);
        hotToggle = new WebToggleButton("Best Seller");
        hotToggle.setActionCommand("Best Seller");
        hotToggle.addActionListener(this);
        newToggle = new WebToggleButton("New");
        newToggle.setActionCommand("New");
        newToggle.addActionListener(this);
        specialToggle = new WebToggleButton("Special");
        specialToggle.setActionCommand("Special");
        specialToggle.addActionListener(this);
        recommandedToggle = new WebToggleButton("Recommended");
        recommandedToggle.setActionCommand("Recommended");
        recommandedToggle.addActionListener(this);
        noneToggle = new WebToggleButton("None");
        noneToggle.setActionCommand("None");
        noneToggle.addActionListener(this);
        
        WebButtonGroup btnGroup = new WebButtonGroup(
                true, 
                promotionToggle, hotToggle, newToggle, 
                specialToggle, recommandedToggle, noneToggle
                );
        btnGroup.setButtonsDrawFocus(false);
        tagPanel.add(btnGroup, BorderLayout.CENTER);
        
        UiToolKits.centerToScreen(this);
        okButton.requestFocus();
    }


    public Menu getMenu() {
        if(menu == null) menu = new Menu();
        return menu;
    }

    public void setMenu(Menu menu) {
        this.menu = menu;
    }

    public boolean isOkPressed() {
        return okPressed;
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        webLabel1 = new com.alee.laf.label.WebLabel();
        webLabel3 = new com.alee.laf.label.WebLabel();
        nameField = new com.alee.laf.text.WebTextField();
        priceField = new com.alee.laf.text.WebTextField();
        webLabel4 = new com.alee.laf.label.WebLabel();
        tagPanel = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        descriptionArea = new com.alee.laf.text.WebTextArea();
        cancelButton = new com.alee.laf.button.WebButton();
        okButton = new com.alee.laf.button.WebButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Menu Edit");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        webLabel1.setText("Name");

        webLabel3.setText("Price");

        webLabel4.setText("Description");

        tagPanel.setMaximumSize(new java.awt.Dimension(300, 50));
        tagPanel.setMinimumSize(new java.awt.Dimension(300, 50));
        tagPanel.setLayout(new java.awt.BorderLayout());

        descriptionArea.setColumns(20);
        descriptionArea.setRows(5);
        jScrollPane2.setViewportView(descriptionArea);

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        okButton.setText("Ok");
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(webLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 206, Short.MAX_VALUE)
                                .addComponent(okButton, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(tagPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane2)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(webLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(webLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(priceField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(nameField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addGap(20, 20, 20))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(webLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(priceField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(webLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tagPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(webLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(okButton, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
        Menu menu = getMenu();
        try {
            if(nameField.getText().isEmpty()) {
                WebOptionPane.showMessageDialog(this, "Dishes name must not be empty.", "Error", WebOptionPane.ERROR_MESSAGE);
                return;
            }
            Double price = Double.parseDouble(priceField.getText());
            MenuReference ref = new MenuReference(nameField.getText(), price);
            menu.setReference(ref);
            menu.setDescription(descriptionArea.getText());
            menu.setTag(selectedTag);
            okPressed = true;
            setVisible(false);
        } catch(NumberFormatException ex) {
            WebOptionPane.showMessageDialog(this, "Only decimal input is accepted for 'price'.", "Error", WebOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_okButtonActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        setVisible(false);
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        if(menu != null) {
            MenuReference ref = menu.getReference();
            nameField.setText(ref.getName());
            priceField.setText(ref.getPrice().toString());
            descriptionArea.setText(menu.getDescription());
            if(menu.getTag() == null) return;
            switch(menu.getTag()) {
                case Promotion: promotionToggle.doClick(); break;
                case BestSeller: hotToggle.doClick(); break;
                case Recommended: recommandedToggle.doClick(); break;
                case New: newToggle.doClick(); break;
                case Special: specialToggle.doClick(); break;
                default: noneToggle.doClick();
            }
        }
    }//GEN-LAST:event_formWindowOpened

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MenuEditDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MenuEditDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MenuEditDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MenuEditDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                MenuEditDialog dialog = new MenuEditDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.alee.laf.button.WebButton cancelButton;
    private com.alee.laf.text.WebTextArea descriptionArea;
    private javax.swing.JScrollPane jScrollPane2;
    private com.alee.laf.text.WebTextField nameField;
    private com.alee.laf.button.WebButton okButton;
    private com.alee.laf.text.WebTextField priceField;
    private javax.swing.JPanel tagPanel;
    private com.alee.laf.label.WebLabel webLabel1;
    private com.alee.laf.label.WebLabel webLabel3;
    private com.alee.laf.label.WebLabel webLabel4;
    // End of variables declaration//GEN-END:variables

    @Override
    public void actionPerformed(ActionEvent e) {
        switch (e.getActionCommand()) {
            case "Promotion":
                selectedTag = MenuTag.Promotion;
                break;
            case "Best Seller":
                selectedTag = MenuTag.BestSeller;
                break;
            case "New":
                selectedTag = MenuTag.New;
                break;
            case "Special":
                selectedTag = MenuTag.Special;
                break;
            case "Recommended":
                selectedTag = MenuTag.Recommended;
                break;
            case "None":
                selectedTag = null;
                break;
        }
        
    }
}
