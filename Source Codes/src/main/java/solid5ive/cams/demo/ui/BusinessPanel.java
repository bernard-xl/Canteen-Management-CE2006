/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package solid5ive.cams.demo.ui;

import com.alee.laf.button.WebButton;
import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.List;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.SwingUtilities;
import org.apache.shiro.session.Session;
import org.apache.shiro.session.UnknownSessionException;
import org.apache.shiro.subject.Subject;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Scope;
import org.springframework.stereotype.Component;
import solid5ive.cams.data.entities.Menu;
import solid5ive.cams.data.entities.Stall;
import solid5ive.cams.data.entities.UserAccount;
import solid5ive.cams.demo.model.MenuListModel;
import solid5ive.cams.service.contracts.MenuService;
import solid5ive.cams.service.contracts.SalesService;

/**
 *
 * @author Bernard
 */
@Component
@Scope("prototype")
public class BusinessPanel extends javax.swing.JPanel {

    private static CustomerFrame customerFrame;
    private Subject subject;
    private final MenuListModel currentOrder;
    private final MenuListModel recentOrder;
    private final MenuListModel customerOrder;
    private List<Menu> menus;
    private Double total = 0.00;
    
    @Autowired
    private MenuService menuService;
    @Autowired
    private SalesService salesService;

    /**
     * Creates new form BusinessPanel
     */
    public BusinessPanel() {
        initComponents();
        if (customerFrame == null) {
            customerFrame = new CustomerFrame();
        }
        currentOrder = new MenuListModel();
        recentOrder = new MenuListModel();
        customerOrder = new MenuListModel();
        customerOrder.setShowDescription(true);
        customerOrder.setShowTag(true);
        currentList.setModel(currentOrder);
        recentList.setModel(recentOrder);
        customerFrame.orderList.setModel(customerOrder);
        dishesPanel.setLayout(new WrapLayout(FlowLayout.CENTER, 5, 5));
    }

    public Subject getSubject() {
        return subject;
    }

    public void setSubject(Subject subject) {
        this.subject = subject;
    }

    private void accumulateTotal(Menu menu) {
        total += menu.getReference().getPrice();
        totalLabel.setText(total.toString());
        customerFrame.totalLabel.setText(total.toString());
    }

    private void deductTotal(Menu menu) {
        total -= menu.getReference().getPrice();
        totalLabel.setText(total.toString());
        customerFrame.totalLabel.setText(total.toString());
    }

    private void clearTotal() {
        total = 0.00;
        totalLabel.setText("0.00");
        customerFrame.totalLabel.setText("0.00");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        webButton1 = new com.alee.laf.button.WebButton();
        backButton = new com.alee.laf.button.WebButton();
        webLabel1 = new com.alee.laf.label.WebLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        currentList = new com.alee.laf.list.WebList();
        webLabel2 = new com.alee.laf.label.WebLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        recentList = new com.alee.laf.list.WebList();
        jScrollPane3 = new javax.swing.JScrollPane();
        dishesPanel = new com.alee.laf.panel.WebPanel();
        webLabel3 = new com.alee.laf.label.WebLabel();
        itemCodeField = new com.alee.laf.text.WebTextField();
        webLabel4 = new com.alee.laf.label.WebLabel();
        totalLabel = new com.alee.laf.label.WebLabel();
        confirmButton = new com.alee.laf.button.WebButton();
        webLabel5 = new com.alee.laf.label.WebLabel();

        webButton1.setText("webButton1");

        addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                formAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });

        backButton.setText("Back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        webLabel1.setText("Current Order");

        currentList.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        currentList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                currentListMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(currentList);

        webLabel2.setText("Recent Orders");

        recentList.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jScrollPane2.setViewportView(recentList);

        dishesPanel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jScrollPane3.setViewportView(dishesPanel);

        webLabel3.setText("Item Code:");
        webLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        itemCodeField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        itemCodeField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemCodeFieldActionPerformed(evt);
            }
        });

        webLabel4.setText("Total:");
        webLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        totalLabel.setText("0.00");
        totalLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        confirmButton.setText("Confirm Order");
        confirmButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmButtonActionPerformed(evt);
            }
        });

        webLabel5.setText("Dishes");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(webLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(webLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(backButton, javax.swing.GroupLayout.DEFAULT_SIZE, 174, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane3)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(webLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(webLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(totalLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(itemCodeField, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 414, Short.MAX_VALUE)
                            .addComponent(confirmButton, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(webLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(webLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(7, 7, 7)
                        .addComponent(jScrollPane3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(webLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(itemCodeField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(webLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(totalLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(confirmButton, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(backButton, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(webLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(webLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 308, Short.MAX_VALUE)))
                .addGap(25, 25, 25))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void formAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_formAncestorAdded
        Session session = subject.getSession();
        Stall stall = (Stall) session.getAttribute("Stall");
        int menuIndex = 1;
        menus = menuService.listMenus(stall.getId());
        dishesPanel.removeAll();

        for (final Menu m : menus) {
            String tag = (m.getTag() != null)? ("<br>(" + m.getTag() + ")") : "";
            JButton button = new WebButton("<html>" + menuIndex + ". " + m.getReference().getName() + tag + "</html>");
            //button.setSize(50, 50);
            button.setPreferredSize(new Dimension(120, 100));
            button.setMaximumSize(new Dimension(120, 100));
            button.addActionListener(new ActionListener() {
                @Override
                public void actionPerformed(ActionEvent e) {
                    currentOrder.add(m);
                    customerOrder.add(m);
                    accumulateTotal(m);
                }
            });
            dishesPanel.add(button);
            menuIndex++;
        }

        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                customerFrame.setVisible(true);
            }
        });
    }//GEN-LAST:event_formAncestorAdded

    private void itemCodeFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemCodeFieldActionPerformed
        try {
            int index = Integer.parseInt(itemCodeField.getText()) - 1;
            currentOrder.add(menus.get(index));
            customerOrder.add(menus.get(index));
            accumulateTotal(menus.get(index));
            itemCodeField.setText("");
        } catch (IllegalArgumentException ex) {
            UiToolKits.showExceptionDialog(this, "Invalid request", ex);
        } catch (UnknownSessionException ue) {
            UiToolKits.showErrorDialog(
                    this,
                    "Access Denied",
                    "You are not logged in or the session is expired.");
            System.exit(0);
        } catch (Exception ex) {
            UiToolKits.showExceptionDialog(this, "Unexpected exception", ex);
        }
    }//GEN-LAST:event_itemCodeFieldActionPerformed

    private void confirmButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmButtonActionPerformed
        try {
            Session session = subject.getSession();
            Stall stall = (Stall) session.getAttribute("Stall");
            List<Menu> orderedMenu = currentOrder.asList();
            Integer[] orderedIndexes = new Integer[orderedMenu.size()];
            String customerCode = customerFrame.getCustomerCode();
            //String customerCode = "root";
            
            if(customerCode.isEmpty())return;
            
            for (int i = 0; i < orderedIndexes.length; i++) {
                orderedIndexes[i] = orderedMenu.get(i).getId();
            }
            
            JFrame topFrame = (JFrame) SwingUtilities.getWindowAncestor(this);
            //MockDateTimeDialog dialog = new MockDateTimeDialog(topFrame, true);
            //dialog.setVisible(true);
            //UserAccount userAcc = salesService.mockData(dialog.getDateTime(), stall.getId(), customerCode, orderedIndexes);
            UserAccount userAcc = salesService.acceptOrder(stall.getId(), customerCode, orderedIndexes);
            customerFrame.showCustomerBalance(userAcc.getBalance(), false);
            recentOrder.add(currentOrder.asList());
            currentOrder.clear();
            customerOrder.clear();
            clearTotal();
        } catch (IllegalArgumentException ex) {
            UiToolKits.showExceptionDialog(this, "Invalid request", ex);
            if(ex.getMessage().equals("Insufficient balance.")) {
                customerFrame.showCustomerBalance(null, true);
            }
        } catch (UnknownSessionException ue) {
            UiToolKits.showErrorDialog(
                    this,
                    "Access Denied",
                    "You are not logged in or the session is expired.");
            System.exit(0);
        } catch (Exception ex) {
            UiToolKits.showExceptionDialog(this, "Unexpected exception", ex);
        }
    }//GEN-LAST:event_confirmButtonActionPerformed

    private void currentListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_currentListMouseClicked
        if (evt.getClickCount() >= 2) {
            int selectIndex = currentList.getSelectedIndex();
            if (selectIndex != -1 && !currentOrder.asList().isEmpty()) {
                Menu menu = currentOrder.get(selectIndex);
                currentOrder.remove(selectIndex);
                customerOrder.remove(selectIndex);
                deductTotal(menu);
            }
        }
    }//GEN-LAST:event_currentListMouseClicked

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        customerFrame.setVisible(false);
    }//GEN-LAST:event_backButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public com.alee.laf.button.WebButton backButton;
    private com.alee.laf.button.WebButton confirmButton;
    private com.alee.laf.list.WebList currentList;
    private com.alee.laf.panel.WebPanel dishesPanel;
    private com.alee.laf.text.WebTextField itemCodeField;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private com.alee.laf.list.WebList recentList;
    private com.alee.laf.label.WebLabel totalLabel;
    private com.alee.laf.button.WebButton webButton1;
    private com.alee.laf.label.WebLabel webLabel1;
    private com.alee.laf.label.WebLabel webLabel2;
    private com.alee.laf.label.WebLabel webLabel3;
    private com.alee.laf.label.WebLabel webLabel4;
    private com.alee.laf.label.WebLabel webLabel5;
    // End of variables declaration//GEN-END:variables
}
